# Copyright 2021, Proofcraft Pty Ltd
#
# SPDX-License-Identifier: BSD-2-Clause

# sel4test hardware builds and runs
#
# See sel4test-hw/builds.yml in the repo seL4/ci-actions for configs.

name: seL4Test-HW

on:
  workflow_call:
    inputs:
      labels:
        required: false
        type: string
      concurrency_group:
        required: true
        type: string

# intended to run on
#  pull_request_target:
#    types: [opened, reopened, synchronize, labeled]
# needs PR target for secrets access; guard by requiring label

# downgrade permissions to read-only as you would have in a standard PR action
permissions:
  contents: read

concurrency:
  group: ${{ inputs.concurrency_group }}
  cancel-in-progress: true

jobs:
  info:
    runs-on: ubuntu-latest
    steps:
    - run: echo ${{ github.workspace }}
    - env:
        inputs_JSON: ${{ toJSON(inputs) }}
        github_JSON: ${{ toJSON(github) }}
      run: echo ${GITHUB_WORKSPACE}
    - run: ls -la /home/runner
    - run: ls -la /home/runner/runners
    - run: ls -la /home/runner/work
    - run: ls -la /home/runner/work/_PipelineMapping/axel-h
    - run: ls -la /home/runner/work/_temp

  code:
    name: Freeze Code
    runs-on: ubuntu-latest
    if: ${{ contains(inputs.labels, 'hw-build') ||
            contains(inputs.labels, 'hw-test') }}
    outputs:
      xml: ${{ steps.repo.outputs.xml }}
    steps:
    - id: repo
      uses: seL4/ci-actions/repo-checkout@master
      with:
        manifest_repo: sel4test-manifest
        manifest: master.xml
        sha: ${{ github.event.pull_request.head.sha }}

  hw-build:
    name: HW Build
    runs-on: ubuntu-latest
    needs: code
    strategy:
      fail-fast: false
      matrix:
        # There is no "rv32imac" hardware yet.
        march: [armv7a, armv8a, nehalem, rv64imac]
        compiler: [gcc, clang]
    steps:
    - run: echo ${{ github.workflow }}-sel4test-build-pr-${{ github.event.number }}-${{ strategy.job-index }}
    - name: Build
      uses: seL4/ci-actions/sel4test-hw@master
      with:
        xml: ${{ needs.code.outputs.xml }}
        march: ${{ matrix.march }}
        compiler: ${{ matrix.compiler }}
    - name: Upload images
      uses: actions/upload-artifact@v4
      with:
        name: images-sel4test-${{ matrix.march }}-${{ matrix.compiler }}
        path: '*-images.tar.gz'
    - name: Upload kernel.elf files
      uses: actions/upload-artifact@v4
      with:
        name: kernel.elf-sel4test-${{ matrix.march }}-${{ matrix.compiler }}
        path: '*-kernel.elf'

  the_matrix:
    name: Matrix
    needs: hw-build
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
    - id: matrix
      uses: seL4/ci-actions/sel4test-hw-matrix@master

  hw-run-debug:
    name: HW Run Debug
    runs-on: ubuntu-latest
    needs: [code, hw-build]
    steps:
      - run: echo ${{ needs.code.outputs.matrix }}

  hw-run-debug2:
    name: HW Run Debug
    runs-on: ubuntu-latest
    needs: [hw-build]
    steps:
      - run: echo ${{ needs.code.outputs.matrix }}

  hw-run:
    name: HW Run
    runs-on: ubuntu-latest
    needs: the_matrix
    if: ${{ github.repository_owner == 'seL4' &&
            contains(inputs.labels, 'hw-test') }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.the_matrix.outputs.matrix) }}
    steps:
      - run: echo ${{ github.workflow }}-sel4test-hw-run-pr-${{ github.event.number }}-${{ strategy.job-index }}
      - name: Get machine queue
        uses: actions/checkout@v4
        with:
          repository: seL4/machine_queue
          path: machine_queue
      - name: Download image
        uses: actions/download-artifact@v4
        with:
          name: images-sel4test-${{ matrix.march }}-${{ matrix.compiler }}
      - name: Run
        uses: seL4/ci-actions/sel4test-hw-run@master
        with:
          platform: ${{ matrix.platform }}
          compiler: ${{ matrix.compiler }}
          mode: ${{ matrix.mode }}
          index: $${{ strategy.job-index }}
        env:
          HW_SSH: ${{ secrets.HW_SSH }}
